/*Contains buildMaze(), printMaze(), moveGoblin(char[][] maze)*/

import java.util.*;

public class Maze {
	
	char[][] mazeArray = new char[24][80];
	int charCount = 0;
	Random rand = new Random();
	int x = 15, y = 60;
	
	public boolean moveGoblin(char[][] maze)  //gets puzzle maze and the location of a goblin
	{
		int randNum = 0;
		boolean lose = false;
		
		randNum = rand.nextInt(4);
		
		
			switch(randNum)
			{
				case 0:
					if(maze[x - 1][y] != '#')
					{
						if(maze[x - 1][y] == '@')
						{
							lose = true;
							break;
						}
						maze[x - 1][y] = 'g';
						maze[x][y] = '.';
						x = x - 1;
					}
					break;
				case 1:
					if(maze[x][y - 1] != '#')
					{
						if(maze[x][y - 1] == '@')
						{
							lose = true;
							break;
						}
						maze[x][y - 1] = 'g';
						maze[x][y] = '.';
						y = y - 1;
					}
					break;
				case 2:
					if(maze[x][y + 1] != '#')
					{
						if(maze[x][y + 1] == '@')
						{
							lose = true;
							break;
						}
						maze[x][y + 1] = 'g';
						maze[x][y] = '.';
						y = y + 1;
					}
					break;
				case 3:
					if(maze[x + 1][y] != '#')
					{
						if(maze[x + 1][y] == '@')
						{
							lose = true;
							break;
						}
						maze[x + 1][y] = 'g';
						maze[x][y] = '.';
						x = x + 1;
					}
					break;
				default:
					;
			}
		
		return lose;
	}	
	
	
	public char[][] buildMaze()
	{
		
		String input = new String(
				"################################################################################" +
				"#..............................................................................#" +
				"#..............................................................#...............#" +
				"#................#.............................................#...............#" +
				"#................#.............................................#...............#" +
				"#................#......................................#......#...............#" +
				"##################.............................###......#......#...............#" +
				"#................................................#......#......####............#" +
				"#................................................#......#.........#............#" +
				"#.........................................#......#......#.........#............#" +
				"#.........................................#......#......#.........#............#" +
				"#.........................................#......#......#.........#............#" +
				"#.........................................#......#......#.........#######......#" +
				"#.........................................#......#.............................#" +
				"#.........................................#......#..................#########..#" +
				"#.........................................########.............................#" +
				"#...........############.......................................................#" +
				"#......................#.......................................................#" +
				"#......................#.......................................................#" +
				"#......................#.......................................................#" +
				"#......................#.......................................................#" +
				"#..............................................####################............#" +
				"#..............................................................................#" +
				"################################################################################");
		
		for(int i = 0; i < 24; i++)
		{
			for(int j = 0; j < 80; j++)
			{
				mazeArray[i][j] = input.charAt(charCount); 
				charCount++;
			}
		}
		
		/* alternate method
		for(int i = 0; i < 24; i++)
		{
			for(int j = 0; j < 80; j++)
			{
				if(i == 0 || i == 24 - 1 || j == 0 || j == 80 - 1) //maze border
				{
					mazeArray[i][j] = "#";
				}
				else if(i == 0)  //make maze walls with if statements
				{
					mazeArray[i][j] = "#";
				}
				else
				{
					mazeArray[i][j] = ".";
				}
			}
		}*/
		mazeArray[13][10] = '@';  //initialize @
		mazeArray[15][60] = 'g'; //initialize g
		return mazeArray;
	} 
	
	public void printMaze()
	{
		for(int i = 0; i < 24; i++)
		{
			for(int j = 0; j < 80; j++)
			{
				System.out.print(mazeArray[i][j]);
			}
			System.out.println("");
		}
	}
	

	
	

	
	
	
	
	
}
